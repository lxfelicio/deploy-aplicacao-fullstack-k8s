apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: projeto1 # Define o namespace
spec:
  accessModes: ["ReadWriteOnce"] # Modo de acesso
  resources:
    requests:
      storage: 1Gi # Requisição de armazenamento
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: projeto1 # Define o namespace
spec:
  selector:
    matchLabels:
      app: mysql # Seleciona o app mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7 # Imagem do MySQL
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root # Senha do root
        - name: MYSQL_DATABASE
          value: projeto # Nome do banco de dados
        ports:
        - containerPort: 3306 # Porta do MySQL
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql # Monta o volume
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d # Monta o script de inicialização
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc # Referência ao PVC
      - name: init-script
        configMap:
          name: mysql-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init
  namespace: projeto1
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS projeto;
    USE projeto;
    CREATE TABLE IF NOT EXISTS usuarios (
      id INT AUTO_INCREMENT PRIMARY KEY,
      nome VARCHAR(100),
      email VARCHAR(100),
      comentario VARCHAR(255)
    );
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: projeto1
spec:
  selector:
    app: mysql # Seleciona o app mysql
  ports:
    - port: 3306
      targetPort: 3306 # Porta de destino
